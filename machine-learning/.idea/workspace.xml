<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="a4add5f0-d95d-4b36-8370-2d57070ddb94" name="Default" comment="" />
    <ignored path="$PROJECT_DIR$/out/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/machine_learning/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="606">
              <caret line="227" selection-start-line="227" selection-end-line="227" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/thinktopic/cortex/0.9.22/cortex-0.9.22.jar!/cortex/nn/layers.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="291">
              <caret line="262" column="6" selection-start-line="262" selection-start-column="6" selection-end-line="262" selection-end-column="6" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="120">
              <caret line="8" selection-start-line="8" selection-end-line="8" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$APPLICATION_CONFIG_DIR$/idea64.vmoptions">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="195">
              <caret line="13" selection-start-line="13" selection-end-line="13" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file:///media/scott/Storage/dev/FYP-SportsMatchPredictor/machine-learning/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="120">
              <caret line="8" selection-start-line="8" selection-end-line="8" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$APPLICATION_CONFIG_DIR$/idea64.vmoptions" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="/media/scott/Storage/dev/FYP-SportsMatchPredictor/machine-learning/project.clj" />
        <option value="$PROJECT_DIR$/src/machine_learning/core.clj" />
      </list>
    </option>
  </component>
  <component name="MavenProjectNavigator">
    <treeState>
      <expand />
      <select />
    </treeState>
  </component>
  <component name="ProjectFrameBounds" extendedState="7">
    <option name="x" value="1920" />
    <option name="y" value="81" />
    <option name="width" value="1280" />
    <option name="height" value="1024" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="machine-learning" type="b2602c69:ProjectViewProjectNode" />
              <item name="machine-learning" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="machine-learning" type="b2602c69:ProjectViewProjectNode" />
              <item name="machine-learning" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="machine-learning" type="b2602c69:ProjectViewProjectNode" />
              <item name="machine-learning" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="machine_learning" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1555527120412" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="configurable.group.build" />
  </component>
  <component name="ReplState" timestamp="1555074231941">{:repl-history {:ide [], :local [{:command &quot;(first (:training-set dataset))&quot;, :offset 31, :ns &quot;machine-learning.core&quot;} {:command &quot;(:data (first training-set))&quot;, :offset 28, :ns &quot;machine-learning.core&quot;} {:command &quot;(def training-set (:training-set dataset))\n(def testing-set (:testing-set dataset))\n(:data (first training-set))&quot;, :offset 112, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (:data (first training-set)))&quot;, :offset 36, :ns &quot;machine-learning.core&quot;} {:command &quot;(defn train []\n  (let [network (network/linear-network network-description)\n        train-original (:training-set dataset)\n        test-dataset (:testing-set dataset)\n        train-dataset (experiment.util/infinite-class-balanced-dataset train-original\n                                                                       :class-key :label\n                                                                       :epoch-size (:epoch-size params))]\n    (train/train-n network train-dataset test-dataset\n                   :batch-size (:batch-size params)\n                   :epoch-count (:epoch-count params)\n                   :optimizer (:optimizer params))))&quot;, :offset 660, :ns &quot;machine-learning.core&quot;} {:command &quot;(train)&quot;, :offset 7, :ns &quot;machine-learning.core&quot;} {:command &quot;(train network-description network-params)&quot;, :offset 42, :ns &quot;machine-learning.core&quot;} {:command &quot;model&quot;, :offset 5, :ns &quot;machine-learning.core&quot;} {:command &quot;(def network-description2\n  [(layers/input 16 1 1 :id :data)\n   (layers/linear-&gt;tanh 32)\n   (layers/tanh)\n   (layers/linear 1 :id :label)])\n(def model (train network-description2 network-params))&quot;, :offset 195, :ns &quot;machine-learning.core&quot;} {:command &quot;model2&quot;, :offset 6, :ns &quot;machine-learning.core&quot;} {:command &quot;(def csv-parts\n  (partition 1000 1000 nil csv-data))&quot;, :offset 52, :ns &quot;machine-learning.core&quot;} {:command &quot;(def csv-parts\n  (partition (/ (count csv-data) 20) (/ (count csv-data) 20) nil csv-data))&quot;, :offset 90, :ns &quot;machine-learning.core&quot;} {:command &quot;(/ (count csv-data) 20)&quot;, :offset 23, :ns &quot;machine-learning.core&quot;} {:command &quot;(int (/ (count csv-data) 20))&quot;, :offset 29, :ns &quot;machine-learning.core&quot;} {:command &quot;(float (/ (count csv-data) 20))&quot;, :offset 31, :ns &quot;machine-learning.core&quot;} {:command &quot;(def csv-parts\n  (partition (+ (int (/ (count csv-data) 20)) 0)\n             (+ (int (/ (count csv-data) 20)) 0) nil csv-data))&quot;, :offset 127, :ns &quot;machine-learning.core&quot;} {:command &quot;(def csv-parts\n  (partition (+ (int (/ (count csv-data) 20)) 1)\n             (+ (int (/ (count csv-data) 20)) 1) nil csv-data))&quot;, :offset 127, :ns &quot;machine-learning.core&quot;} {:command &quot;(int (/ (count (first csv-parts)) 20))&quot;, :offset 38, :ns &quot;machine-learning.core&quot;} {:command &quot;(count csv-parts)&quot;, :offset 17, :ns &quot;machine-learning.core&quot;} {:command &quot;(first partitioned-parts)&quot;, :offset 25, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (first csv-parts))&quot;, :offset 25, :ns &quot;machine-learning.core&quot;} {:command &quot;(def dataset2 (split-dataset (initialise-dataset csv-data2) 20))&quot;, :offset 64, :ns &quot;machine-learning.core&quot;} {:command &quot;dataset2&quot;, :offset 8, :ns &quot;machine-learning.core&quot;} {:command &quot;(initialise-dataset csv-data2)&quot;, :offset 30, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (initialise-dataset csv-data2))&quot;, :offset 38, :ns &quot;machine-learning.core&quot;} {:command &quot;(couunt (first initialised-parts))&quot;, :offset 34, :ns &quot;machine-learning.core&quot;} {:command &quot;(type (first initialised-parts))&quot;, :offset 32, :ns &quot;machine-learning.core&quot;} {:command &quot;(type (initialise-dataset csv-data2))&quot;, :offset 37, :ns &quot;machine-learning.core&quot;} {:command &quot;(split-dataset (first initialised-parts) 20)&quot;, :offset 44, :ns &quot;machine-learning.core&quot;} {:command &quot;(def big-number-str \&quot;-4.400014877319336E-4\&quot;)&quot;, :offset 44, :ns &quot;machine-learning.core&quot;} {:command &quot;(type (read-string big-number-str))&quot;, :offset 35, :ns &quot;machine-learning.core&quot;} {:command &quot;(first initialised-parts)&quot;, :offset 25, :ns &quot;machine-learning.core&quot;} {:command &quot;(read-string big-number-str)&quot;, :offset 28, :ns &quot;machine-learning.core&quot;} {:command &quot;(def big-number (read-string big-number-str))&quot;, :offset 45, :ns &quot;machine-learning.core&quot;} {:command &quot;big-number&quot;, :offset 10, :ns &quot;machine-learning.core&quot;} {:command &quot;(int big-number)&quot;, :offset 16, :ns &quot;machine-learning.core&quot;} {:command &quot;(float big-number)&quot;, :offset 18, :ns &quot;machine-learning.core&quot;} {:command &quot;(decimal big-number)&quot;, :offset 20, :ns &quot;machine-learning.core&quot;} {:command &quot;(Double. (format \&quot;%.4f\&quot; big-number))&quot;, :offset 36, :ns &quot;machine-learning.core&quot;} {:command &quot;(Double. (format \&quot;%.10f\&quot; big-number))&quot;, :offset 37, :ns &quot;machine-learning.core&quot;} {:command &quot;(type big-number)&quot;, :offset 17, :ns &quot;machine-learning.core&quot;} {:command &quot;(double? big-number)&quot;, :offset 20, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (first intialised-parts))&quot;, :offset 32, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (first initialised-parts))&quot;, :offset 33, :ns &quot;machine-learning.core&quot;} {:command &quot;(initialise-dataset csv-data)&quot;, :offset 29, :ns &quot;machine-learning.core&quot;} {:command &quot;(def initialised-data (initialise-dataset csv-data))&quot;, :offset 52, :ns &quot;machine-learning.core&quot;} {:command &quot;(def initialised-data (partitioned-initialise-dataset (split-csv csv-data 10)))&quot;, :offset 79, :ns &quot;machine-learning.core&quot;} {:command &quot;(count initialise-data)&quot;, :offset 23, :ns &quot;machine-learning.core&quot;} {:command &quot;(count csv-data)&quot;, :offset 16, :ns &quot;machine-learning.core&quot;} {:command &quot;(def initialised-data (flatten initialise-data))&quot;, :offset 48, :ns &quot;machine-learning.core&quot;} {:command &quot;(def initialised-data (flatten initialised-data))&quot;, :offset 49, :ns &quot;machine-learning.core&quot;} {:command &quot;(count initialised-data)&quot;, :offset 24, :ns &quot;machine-learning.core&quot;} {:command &quot;(count csv-data2)&quot;, :offset 17, :ns &quot;machine-learning.core&quot;} {:command &quot;(def dataset (split-dataset-random initialised-data))&quot;, :offset 53, :ns &quot;machine-learning.core&quot;} {:command &quot;(def dataset (split-dataset-random initialised-data 20))&quot;, :offset 56, :ns &quot;machine-learning.core&quot;} {:command &quot;(count dataset)&quot;, :offset 15, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (last dataset))&quot;, :offset 22, :ns &quot;machine-learning.core&quot;} {:command &quot;(first (first dataset))&quot;, :offset 23, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (first (first dataset)))&quot;, :offset 31, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (first (last dataset)))&quot;, :offset 30, :ns &quot;machine-learning.core&quot;} {:command &quot;(+ (count (last (first dataset))) (count (last (last dataset))))&quot;, :offset 64, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (last (partitioned-initialise-dataset csv-parts)))&quot;, :offset 57, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (first (partitioned-initialise-dataset csv-parts)))&quot;, :offset 58, :ns &quot;machine-learning.core&quot;} {:command &quot;(def dataset (split-dataset-sectioned initialised-data 20))&quot;, :offset 59, :ns &quot;machine-learning.core&quot;} {:command &quot;(+ (count (first (first dataset))) (count (first (last dataset))))&quot;, :offset 66, :ns &quot;machine-learning.core&quot;} {:command &quot;(first dataset)&quot;, :offset 15, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (first dataset))&quot;, :offset 23, :ns &quot;machine-learning.core&quot;} {:command &quot;(flatten (first dataset))&quot;, :offset 25, :ns &quot;machine-learning.core&quot;} {:command &quot;(count (flatten (first dataset)))&quot;, :offset 33, :ns &quot;machine-learning.core&quot;} {:command &quot;(test-model model (:testing-set dataset))&quot;, :offset 41, :ns &quot;machine-learning.core&quot;} {:command &quot;(def new-params {})&quot;, :offset 19, :ns &quot;machine-learning.core&quot;} {:command &quot;(def new-params {:batch-size 250 :epoch-count 15})&quot;, :offset 50, :ns &quot;machine-learning.core&quot;} {:command &quot;(insert-default-params new-params)&quot;, :offset 34, :ns &quot;machine-learning.core&quot;} {:command &quot;(insert-default-params nil)&quot;, :offset 27, :ns &quot;machine-learning.core&quot;} {:command &quot;(first csv-data)&quot;, :offset 16, :ns &quot;machine-learning.core&quot;} {:command &quot;(keys (first csv-data))&quot;, :offset 23, :ns &quot;machine-learning.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="nREPL" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="machine-learning" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="TEST_OBJECT" value="class" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG">
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a4add5f0-d95d-4b36-8370-2d57070ddb94" name="Default" comment="" />
      <created>1552992045664</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1552992045664</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="1920" y="81" width="1280" height="1024" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.24473257" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Designer" order="2" />
      <window_info id="Image Layers" order="3" />
      <window_info id="Capture Tool" order="4" />
      <window_info id="UI Designer" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Terminal" order="7" />
      <window_info anchor="bottom" id="Event Log" order="8" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="9" />
      <window_info anchor="bottom" id="Messages" order="10" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Capture Analysis" order="4" />
      <window_info anchor="right" id="Theme Preview" order="5" />
      <window_info anchor="right" id="REPL" order="6" sideWeight="0.80688125" side_tool="true" weight="0.34764993" />
      <window_info anchor="right" id="Leiningen" order="7" sideWeight="0.19311875" weight="0.34764993" />
      <window_info anchor="right" id="Palette&#9;" order="8" />
      <window_info anchor="right" id="Maven Projects" order="9" />
      <window_info anchor="right" id="Maven" order="10" sideWeight="0.49946064" weight="0.32977587" />
    </layout>
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/.." />
    </ignored-roots>
  </component>
  <component name="editorHistoryManager">
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/lang/Compiler.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="656" selection-start-line="656" selection-end-line="656" />
          <folding>
            <element signature="e#23782#23783#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/main.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="302">
          <caret line="239" selection-start-line="239" selection-end-line="239" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="300">
          <caret line="136" selection-start-line="136" selection-end-line="136" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/lang/RT.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-8">
          <caret line="331" selection-start-line="331" selection-end-line="331" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/lang/RestFn.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="495" column="28" lean-forward="true" selection-start-line="495" selection-start-column="28" selection-end-line="495" selection-end-column="28" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_CONFIG_DIR$/idea64.vmoptions">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="195">
          <caret line="13" selection-start-line="13" selection-end-line="13" />
        </state>
      </provider>
    </entry>
    <entry file="file:///media/scott/Storage/dev/FYP-SportsMatchPredictor/machine-learning/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="8" selection-start-line="8" selection-end-line="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="8" selection-start-line="8" selection-end-line="8" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/thinktopic/cortex/0.9.22/cortex-0.9.22.jar!/cortex/nn/layers.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="291">
          <caret line="262" column="6" selection-start-line="262" selection-start-column="6" selection-end-line="262" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/machine_learning/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="606">
          <caret line="227" selection-start-line="227" selection-end-line="227" />
        </state>
      </provider>
    </entry>
  </component>
</project>